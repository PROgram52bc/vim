global !p
from UltiSnips.indent_util import IndentUtil
def generate_print_snippet(snip):
	line = snip.buffer[snip.line]
	count = int(line)
	# Remove the trailing numbers directly, rather than reindent the line; since this function does not need to be compatible else where, so tight coupling with the specific snippet is accepted.
	snip.buffer[snip.line] = re.sub(r"\d+$", "", line)

	# generate a snippet of the following form
	# print("$1: {}\n$2: {}\n".format(${1:var1}, ${2:var2}))
	prefix = 'var'
	snippet = ('print("' +
			"\\n".join(['${:d}: {{}}'.format(i) for i in range(1, count+1)]) +
			'"' +
			('\n\t' if count >= 2 else '') + # new line if more than 2 variables
			'.format(' +
			", ".join(['${{{:d}:{:s}{:d}}}'.format(i,prefix,i) for i in range(1, count+1)]) +
			'))$0')
	snip.expand_anon(snippet)
endglobal

post_jump "generate_print_snippet(snip)"
snippet "pr(\d+)?" "print x variables" br
`!p
snip.rv = match.group(1) if match.group(1) else 1`
endsnippet
